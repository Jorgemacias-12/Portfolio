---
import { Header } from "@/components/Header";
import { getI18N } from "@/i18n";
import { appendBaseUrl } from "@/utils";

import "@fontsource/geist-sans/100.css";
import "@fontsource/geist-sans/200.css";
import "@fontsource/geist-sans/300.css";
import "@fontsource/geist-sans/400.css";
import "@fontsource/geist-sans/500.css";
import "@fontsource/geist-sans/600.css";
import "@fontsource/geist-sans/700.css";
import "@fontsource/geist-sans/800.css";
import "@fontsource/geist-sans/900.css";

interface Props {
  title: string;
  description: string;
}
const { currentLocale } = Astro;
const { title, description } = Astro.props;

if (!currentLocale) throw new Error("Current locale is null");

const lang = getI18N(currentLocale);

const { PAGE_TITLE, PAGE_DESCRIPTION } = lang;
---

<!doctype html>
<html lang={currentLocale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href={appendBaseUrl("/favicon.png")} />
    <title>{title}</title>
    <meta name="description" content={description} />

    <link
      rel="preload"
      href="https://cdn.jsdelivr.net/gh/devicons/devicon@latest/devicon.min.css"
      as="style"
    />

    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.jsdelivr.net/gh/devicons/devicon@latest/devicon.min.css"
    />

    <meta property="og:type" content="website" />
    <meta property="og:title" content={PAGE_TITLE} />
    <meta property="og:url" content="" />
    <meta property="og:image" content={appendBaseUrl("/og-image.jpg")} />
    <meta property="og:description" content={PAGE_DESCRIPTION} />

    <meta name="twitter:card" content="summary" />
    <meta property="twitter:title" content={PAGE_TITLE} />
    <meta name="twitter:image" content={appendBaseUrl("/og-image.jpg")} />
    <meta property="twitter:description" content={PAGE_DESCRIPTION} />

    <meta
      name="google-site-verification"
      content="19ev_yaCk6dZ5MoTvVU8Uf9AZ6S69Tt1U2PrMc-N170"
    />
  </head>
  <body class="bg-[#f7f7f8] dark:bg-black_rain-400 text-black dark:text-white">
    <section class="header-placeholder"></section>
    <Header client:only="react" lang={currentLocale!} />
    <slot />
  </body>
</html>
<style is:global>
  html {
    scroll-behavior: smooth;
    font-family: "Geist Sans", sans-serif;
  }

  body {
    min-height: 100vh;
    min-height: 100dvh;
    display: grid;
    padding-left: 0;
    @apply grid-rows-layout_mobile md:grid-cols-layout_desktop md:grid-rows-none;
  }

  .dark ::-moz-selection {
    background-color: #301201;
  }
  .dark ::selection {
    background-color: #301201;
  }

  ::-moz-selection {
    background-color: #f35b04;
  }

  ::selection {
    background-color: #f35b04;
  }

  .header-placeholder {
    @apply flex w-full md:w-60;
  }
</style>
<script>
  import { $theme } from "@/stores";

  $theme.subscribe((value, oldValue) => {
    document.documentElement.classList.remove(oldValue!);
    document.documentElement.classList.add(value);
  });

  document.documentElement.classList.add($theme.get());
</script>
