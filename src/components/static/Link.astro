---
interface Props {
  label: string;
  url: string;
  isForMenu?: boolean;
}
const { label, url, isForMenu } = Astro.props;
---

{
  isForMenu ? (
    <li>
      <a
        class="link flex flex-1 w-full rounded-md p-2 hover:bg-accent-dark dark:hover:bg-accent-light"
        aria-label={label}
        data-url={url}
        href={url}
      >
        {label}
      </a>
    </li>
  ) : (
    <a
      class="link flex flex-1 w-full rounded-md p-2 hover:bg-accent-dark dark:hover:bg-accent-light"
      aria-label={label}
      data-url={url}
      href={url}
    >
      {label}
    </a>
  )
}

<script>
  const handleClick = (e: Event) => {
    const url = (e.target as HTMLLinkElement).getAttribute("data-url");

    if (!url) throw new Error("No data-url for this component");

    if (!url.includes("/")) return;

    e.preventDefault();

    window.scrollTo({ top: 0, behavior: "smooth" });

    window.history.pushState(null, document.title, window.location.pathname);
  };

  const links = document.querySelectorAll(".link");

  links.forEach((e) => e.addEventListener("click", handleClick));
</script>
