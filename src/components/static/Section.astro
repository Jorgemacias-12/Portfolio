---
import type { SectionVariant } from "@/types";
import { twMerge } from "tailwind-merge";

export interface Props {
  id?: string;
  title: string;
  optionalTitle?: boolean;
  variant?: SectionVariant;
  class?: string;
  titleClass?: string;
  contentClass?: string;
  scrollOffset?: boolean;
}

const {
  id,
  title,
  optionalTitle,
  variant,
  class: sectionClass,
  titleClass,
  contentClass,
  scrollOffset,
} = Astro.props;

const shouldUseTitleId = title && optionalTitle && id;
const shouldUseSectionId = !shouldUseTitleId && id;

const baseSectionClasses =
  "w-full py-12 px-4 sm:px-6 lg:px-8 overflow-x-hidden";
const heroSectionClasses =
  "min-h-[80vh] md:min-h-[100vh] flex items-center justify-center";
const normalSectionClasses = "max-w-6xl mx-auto";

const baseTitleClasses = `text-black dark:text-white mb-6 break-words ${scrollOffset ? "scroll-mt-20" : ""}`;
const heroTitleClasses = `text-4xl sm:text-5xl md:text-6xl font-bold break-words ${scrollOffset ? "scroll-mt-20" : ""}`;
const normalTitleClasses = `text-2xl sm:text-3xl font-semibold break-words ${scrollOffset ? "scroll-mt-20" : ""}`;

const sectionWithOffset = scrollOffset ? "scroll-mt-20" : "";

const baseArticleClasses = "w-full break-words";
const heroArticleClasses = "text-center max-w-3xl mx-auto";
const normalArticleClasses = "";

const baseContentClasses = "overflow-auto max-w-full";
const heroContentClasses = "text-lg sm:text-xl break-words";
const normalContentClasses =
  "text-base sm:text-lg dark:text-[#ccc] break-words";
---

<section
  class={twMerge(
    baseSectionClasses,
    variant === "hero" ? heroSectionClasses : normalSectionClasses,
    sectionWithOffset,
    sectionClass
  )}
  id={shouldUseSectionId ? id : undefined}
>
  <article
    class={twMerge(
      baseArticleClasses,
      variant === "hero" ? heroArticleClasses : normalArticleClasses
    )}
  >
    {
      title && optionalTitle && (
        <h2
          id={shouldUseTitleId ? id : undefined}
          class={twMerge(
            baseTitleClasses,
            variant === "hero" ? heroTitleClasses : normalTitleClasses,
            titleClass
          )}
        >
          {title}
        </h2>
      )
    }

    <slot />
  </article>
</section>
